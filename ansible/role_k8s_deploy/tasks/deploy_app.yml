---
- name: Deploy web page(run in master)
  block:
  - name: Copy files to master from localhost to deploy web page
    copy:
      src: web
      dest: $HOME

  - name: Generate deploy-nginx.yaml
    template: 
      src: deploy-nginx1.j2
      dest: $HOME/web/helm_chart/helm/templates/deploy-nginx1.yaml
    #vars:
    #  region: "{{ region_from_terrafrom }}"

  - name: Copy aws credentials to master
    copy:
      src: .aws/
      dest: ~/.aws/

  - name: Install AWS CLI
    become: true
    shell: apt install -y awscli

  - name: To log in to an Amazon ECR registry
    shell: aws ecr get-login-password --region {{ region_from_terrafrom }} | podman login --username AWS \
            --password-stdin 728490037630.dkr.ecr.{{ region_from_terrafrom }}.amazonaws.com
    
  - name: Build image
    shell: podman build web/nginx_phpfpm/src/ -t 728490037630.dkr.ecr.{{ region_from_terrafrom }}.amazonaws.com/my_image

  - name: Push image
    shell: podman push 728490037630.dkr.ecr.{{ region_from_terrafrom }}.amazonaws.com/my_image 

  - name: Delete secret key for pull image(if it exist)
    shell: kubectl delete secret regcred --ignore-not-found

  - name: Create secret for pull image
    shell: |
      kubectl create secret docker-registry regcred --docker-username=AWS \
      --docker-server=728490037630.dkr.ecr.{{ region_from_terrafrom }}.amazonaws.com \
      --docker-password=$(aws ecr get-login-password --region {{ region_from_terrafrom }})

  - name: Run deploy and service
    shell: |
      cd web/helm_chart/helm/templates
      kubectl apply -f ingress1.yaml      
      kubectl apply -f deploy-nginx1.yaml
      kubectl apply -f service-nginx1.yaml
#      kubectl apply -f issuer1.yaml
  become: false
  #if run with become: true(in ansible.cfg) then %HOME will be /root and all run will be as root  
  when: "'ansible_master' in group_names"       